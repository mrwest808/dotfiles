set t_vb= " Disable visual bell

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'junegunn/vim-easy-align'
Plug 'morhetz/gruvbox'
Plug 'jiangmiao/auto-pairs'
Plug 'scrooloose/nerdtree'
Plug 'elzr/vim-json'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'connorholyday/vim-snazzy'
Plug 'matze/vim-move'
Plug 'darfink/vim-plist'
Plug 'leafgarland/typescript-vim'

call plug#end()

set number                     " Precede each line with its line number
set relativenumber             " Show line numbers relative to cursor line
set autoindent                 " Copy indent from current line when starting a new line
set smartindent                " Do smart autoindenting when starting a new line
set lazyredraw                 " Screen will not be redrawn while executing macros, registers & other commands that have not been typed
set laststatus=2               " Last window will always have a status line
set showcmd                    " Show (partial) command in the last line of the screen (turn off if slow)
set backspace=indent,eol,start " Normal backspace behavior
set timeoutlen=500             " Time waited for a mapped sequence to complete (default: 1000)
set whichwrap=b,s              " Backspace/space can move left/right to previous/next line from the first/last character
set shortmess=aIT              " Avoid all hit-enter prompts caused by file messages
set hlsearch                   " Highlight all search term matches
set incsearch                  " Show partial match highlight while typing
set ignorecase smartcase       " Ignore case in search pattern
set wildmenu                   " CLI completion operates in enhanced mode
set wildmode=full
set tabstop=2                  " A <Tab> counts for 2 spaces
set shiftwidth=2               " Number of spaces to use for each step of (auto)indent
set expandtab smarttab         " Use spaces for <Tab>
set scrolloff=1                " Number of screen lines to always keep above/below cursor
set nolist                     " Don't render whitespace characters
set nojoinspaces
set autoread
set foldlevelstart=99
set nocursorline
set synmaxcol=1000
set ttyfast                    " Faster redrawing

if has('termguicolors')
  set termguicolors
endif

syntax on
set t_Co=256
colorscheme snazzy
set background=dark

let mapleader=','

nmap <C-u> 5<C-y>
nmap <C-d> 5<C-e>

nmap <leader>y "*y
nmap <leader>p "*p
nmap <leader>Y "*Y
nmap <leader>P "*P

nmap <leader><space> :nohlsearch<CR>
nmap ga <Plug>(EasyAlign)

command! SourceVim :source ~/.vimrc
command! SourceNvim :source ~/.config/nvim/init.vim

" Open NERDTree when vim starts up on opening a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Close vim if the only window left open is a NERDTree
autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Show hidden files in NERDTree
let NERDTreeShowHidden=1

" NERDTree commands
nmap <leader>to :NERDTreeToggle<CR>
nmap <leader>tf :NERDTreeFind<CR>
nmap <leader>tc :NERDTreeCWD<CR>

" CTRL P ignores
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
